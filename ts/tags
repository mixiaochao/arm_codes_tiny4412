!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADCCON	include/adc.h	6;"	d
ADCDAT	include/adc.h	8;"	d
ADCDLY	include/adc.h	7;"	d
ADCINT	include/adc.h	17;"	d
ADCMUX	include/adc.h	10;"	d
ALMDAY	include/rtc.h	13;"	d
ALMHOUR	include/rtc.h	12;"	d
ALMMIN	include/rtc.h	11;"	d
ALMMON	include/rtc.h	14;"	d
ALMSEC	include/rtc.h	10;"	d
ALMYEAR	include/rtc.h	15;"	d
ASMOBJS	Makefile	/^ASMOBJS		:= head.o$/;"	m
AUTOMATIC_WDT_RESET_DISABLE	wdt.c	22;"	d	file:
BCDDAY	include/rtc.h	20;"	d
BCDDAYWEEK	include/rtc.h	19;"	d
BCDHOUR	include/rtc.h	18;"	d
BCDMIN	include/rtc.h	17;"	d
BCDMON	include/rtc.h	21;"	d
BCDSEC	include/rtc.h	16;"	d
BCDYEAR	include/rtc.h	22;"	d
BIN	Makefile	/^BIN		:= $(TARGET).bin$/;"	m
BPP888	lcd.c	7;"	d	file:
CC	Makefile	/^CC		:= $(CROSS_COMPILE)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS		:= -Wall -fno-builtin -Iinclude -c$/;"	m
CLRINTADC	include/adc.h	9;"	d
CREATE_DESCRIPTOR	include/mmu.h	11;"	d
CROSS_COMPILE	Makefile	/^CROSS_COMPILE	:= arm-linux-$/;"	m
CURTICCNT	include/rtc.h	23;"	d
DEV_ADDR	include/iic.h	6;"	d
EXT_INT41CON	include/tp.h	5;"	d
EXT_INT41_FLTCON1	include/tp.h	8;"	d
EXT_INT41_MASK	include/tp.h	6;"	d
EXT_INT41_PEND	include/tp.h	7;"	d
EXT_INT43CON	include/keyeint.h	12;"	d
EXT_INT43_FLTCON0	include/keyeint.h	13;"	d
EXT_INT43_FLTCON1	include/keyeint.h	14;"	d
EXT_INT43_MASK	include/keyeint.h	15;"	d
EXT_INT43_PEND	include/keyeint.h	16;"	d
GPA0CON	include/uart.h	6;"	d
GPD0CON	include/timer.h	25;"	d
GPD0DAT	include/timer.h	26;"	d
GPD1CON	include/i2c.h	6;"	d
GPD1CON	include/iic.h	8;"	d
GPM4BASE	include/led.h	6;"	d
GPM4CON	include/led.h	7;"	d
GPM4DAT	include/led.h	8;"	d
GPX1CON	include/tp.h	4;"	d
GPX3BASE	include/key.h	6;"	d
GPX3CON	include/key.h	7;"	d
GPX3CON	include/keyeint.h	11;"	d
GPX3DAT	include/key.h	8;"	d
I2CADD	include/iic.h	13;"	d
I2CADDn	include/i2c.h	10;"	d
I2CCON	include/iic.h	11;"	d
I2CCONn	include/i2c.h	8;"	d
I2CDS	include/iic.h	14;"	d
I2CDSn	include/i2c.h	11;"	d
I2CLC	include/iic.h	15;"	d
I2CLCn	include/i2c.h	12;"	d
I2CSTAT	include/iic.h	12;"	d
I2CSTATn	include/i2c.h	9;"	d
ICCEOIR_CPU0	include/irq.h	14;"	d
ICCIAR_CPU0	include/irq.h	13;"	d
ICCICR_CPU0	include/irq.h	9;"	d
ICCPMR_CPU0	include/irq.h	10;"	d
ICDDCR	include/irq.h	11;"	d
ICDIPR_CPU0	include/irq.h	16;"	d
ICDIPTR_CPU0	include/irq.h	17;"	d
ICDISER_CPU0	include/irq.h	18;"	d
IESR2	include/adc.h	11;"	d
IIC1_BASE	include/iic.h	10;"	d
INTP	include/rtc.h	6;"	d
KEY4INT	include/keyeint.h	9;"	d
LD	Makefile	/^LD		:= $(CROSS_COMPILE)ld$/;"	m
LDADD	Makefile	/^LDADD		:= 0x50000000$/;"	m
LEV	include/tp.h	13;"	d
LIBDIR	Makefile	/^LIBDIR		:= \/opt\/toolschain\/4.5.1\/lib\/gcc\/arm-none-linux-gnueabi\/4.5.1\/$/;"	m
MASK_WDT_RESET_REQUEST	wdt.c	23;"	d	file:
MAX_WAIT	i2c.c	48;"	d	file:
MILLET_ISR_H_	include/isr.h	2;"	d
MILLET_TP_H_	include/tp.h	2;"	d
MILLET__IIC_H	include/iic.h	2;"	d
MXC_I2C_H_	include/i2c.h	2;"	d
NM	Makefile	/^NM		:= $(CROSS_COMPILE)nm$/;"	m
NULL	include/lib.h	17;"	d
OBJCOPY	Makefile	/^OBJCOPY		:= $(CROSS_COMPILE)objcopy$/;"	m
OBJS	Makefile	/^OBJS		:= lib.o main.o mmu.o irq.o$/;"	m
RTCALM	include/rtc.h	9;"	d
RTCALM_IRQID	include/rtc.h	46;"	d
RTCCON	include/rtc.h	7;"	d
RTCTIC_IRQID	include/rtc.h	45;"	d
TARGET	Makefile	/^TARGET		:= arm$/;"	m
TCFG0	include/timer.h	6;"	d
TCFG1	include/timer.h	7;"	d
TCMPB0	include/timer.h	10;"	d
TCMPB1	include/timer.h	13;"	d
TCMPB2	include/timer.h	16;"	d
TCMPB3	include/timer.h	19;"	d
TCNTB0	include/timer.h	9;"	d
TCNTB1	include/timer.h	12;"	d
TCNTB2	include/timer.h	15;"	d
TCNTB3	include/timer.h	18;"	d
TCNTB4	include/timer.h	21;"	d
TCNTO0	include/timer.h	11;"	d
TCNTO1	include/timer.h	14;"	d
TCNTO2	include/timer.h	17;"	d
TCNTO3	include/timer.h	20;"	d
TCNTO4	include/timer.h	22;"	d
TCON	include/timer.h	8;"	d
TICCNT	include/rtc.h	8;"	d
TINT_CSTAT	include/timer.h	23;"	d
TP_IRQ	include/tp.h	12;"	d
TTB	include/mmu.h	25;"	d
UART0BASE	include/uart.h	8;"	d
UBRDIVn	include/uart.h	20;"	d
UCONn	include/uart.h	11;"	d
UERSTATn	include/uart.h	15;"	d
UFCONn	include/uart.h	12;"	d
UFRACVALn	include/uart.h	21;"	d
UFSTATn	include/uart.h	16;"	d
UINTMn	include/uart.h	24;"	d
UINTPn	include/uart.h	22;"	d
UINTSPn	include/uart.h	23;"	d
ULCONn	include/uart.h	10;"	d
UMCONn	include/uart.h	13;"	d
UMSTATn	include/uart.h	17;"	d
URXHn	include/uart.h	19;"	d
USPERSEC	timer0.c	41;"	d	file:
UTRSTATn	include/uart.h	14;"	d
UTXHn	include/uart.h	18;"	d
WDTID	include/wdt.h	15;"	d
WTCLRINT	include/wdt.h	13;"	d
WTCNT	include/wdt.h	12;"	d
WTCON	include/wdt.h	10;"	d
WTDAT	include/wdt.h	11;"	d
XCM_ADC_H_	include/adc.h	2;"	d
XCM_IRQ_H_	include/irq.h	2;"	d
XCM_KEY_EINT_H_	include/keyeint.h	2;"	d
XCM_KEY_H_	include/key.h	2;"	d
XCM_LED_H_	include/led.h	2;"	d
XCM_LIB_H_	include/lib.h	2;"	d
XCM_MMU_H_	include/mmu.h	2;"	d
XCM_RTC_H_	include/rtc.h	2;"	d
XCM_TIIMER_H_	include/timer.h	2;"	d
XCM_UART_H_	include/uart.h	2;"	d
XCM_WDT_H_	include/wdt.h	2;"	d
_ANSI_STDARG_H_	include/stdarg.h	32;"	d
_BSD_VA_LIST	include/stdarg.h	67;"	d
_STDARG_H	include/stdarg.h	31;"	d
_VA_LIST	include/stdarg.h	111;"	d
_VA_LIST	include/stdarg.h	63;"	d
_VA_LIST	include/stdarg.h	79;"	d
_VA_LIST_	include/stdarg.h	108;"	d
_VA_LIST_	include/stdarg.h	76;"	d
_VA_LIST_DEFINED	include/stdarg.h	114;"	d
_VA_LIST_T_H	include/stdarg.h	117;"	d
__GNUC_VA_LIST	include/stdarg.h	39;"	d
__VA_LIST	include/stdarg.h	84;"	d
__end_bss	head.S	/^__end_bss:$/;"	l
__gnuc_va_list	include/stdarg.h	/^typedef __builtin_va_list __gnuc_va_list;$/;"	t
__need___va_list	include/stdarg.h	34;"	d
__start_bss	head.S	/^__start_bss:$/;"	l
__va_copy	include/stdarg.h	53;"	d
__va_list__	include/stdarg.h	120;"	d
_data_abort	head.S	/^_data_abort:            $/;"	l
_fiq	head.S	/^_fiq:                   $/;"	l
_irq	head.S	/^_irq:                   $/;"	l
_not_used	head.S	/^_not_used:              $/;"	l
_prefetch_abort	head.S	/^_prefetch_abort:        $/;"	l
_software_interrupt	head.S	/^_software_interrupt:   $/;"	l
_start	head.S	/^_start: $/;"	l
_undefined_instruction	head.S	/^_undefined_instruction: $/;"	l
adc_init	adc.c	/^void adc_init(void)$/;"	f
adc_read	adc.c	/^u16 adc_read(void)$/;"	f
alarm_cnt	rtc.c	/^static u32 alarm_cnt = 0;$/;"	v	file:
bcd2bin	rtc.c	/^u16  bcd2bin(u16 n)$/;"	f
beep_set_hz	timer0.c	/^void beep_set_hz(u32 freq)$/;"	f
bin2bcd	rtc.c	/^u16  bin2bcd(u16 n)$/;"	f
clr_bss	head.S	/^clr_bss:$/;"	l
data_abort	head.S	/^data_abort:$/;"	l
delay	lib.c	/^void delay(u32 n)$/;"	f
do_adc	adc.c	/^void do_adc(void)$/;"	f
do_irq	irq.c	/^void do_irq(void)$/;"	f
do_irq_	head.S	/^do_irq_:$/;"	l
do_keys	key_eint.c	/^void do_keys(void)$/;"	f
do_svc	main.c	/^void do_svc(u32 imme)$/;"	f
do_ticalarm	rtc.c	/^void do_ticalarm(void)$/;"	f
do_timer4	timer4.c	/^void do_timer4(void)$/;"	f
do_tp	isr.c	/^void do_tp(void)$/;"	f
do_unde	main.c	/^void do_unde(void)$/;"	f
do_wdt_timer	wdt.c	/^void do_wdt_timer(void)$/;"	f
draw_point	lcd.c	/^void draw_point(int x, int y, int r, int g, int b)$/;"	f
enable_mmu	mmu.c	/^void enable_mmu(u32 *ttb)$/;"	f
excep_end	head.S	/^excep_end:$/;"	l
excep_sec	head.S	/^excep_sec:$/;"	l
excep_start	head.S	/^excep_start:$/;"	l
fiq	head.S	/^fiq:$/;"	l
gpio_init	lcd.c	/^static void gpio_init(void)$/;"	f	file:
handler_t	include/irq.h	/^typedef void (*handler_t)(void);$/;"	t
hour	include/rtc.h	/^    u32 hour;   \/* Hours (0-23) *\/$/;"	m	struct:__anon1
iic1_gpio_init	i2c.c	/^void iic1_gpio_init(void)$/;"	f
iic1_init	i2c.c	/^void iic1_init(int addr)$/;"	f
init_global_map	mmu.c	/^void init_global_map(u32 *ttb)$/;"	f
irq	head.S	/^irq:$/;"	l
irq_request_cpu0	irq.c	/^void irq_request_cpu0(u32 irqnum, void (*handler)(void), u32 level)$/;"	f
isr	irq.c	/^handler_t isr[160];$/;"	v
key_eint_init	key_eint.c	/^void key_eint_init(void)$/;"	f
lcd_clksrc_set	lcd.c	/^static void lcd_clksrc_set(void)$/;"	f	file:
lcd_init	lcd.c	/^void lcd_init(void)$/;"	f
loop	head.S	/^	loop:$/;"	l
main	main.c	/^int main(void)$/;"	f
mday	include/rtc.h	/^    u32 mday;   \/* Day of the month (1-31) *\/$/;"	m	struct:__anon1
memcpy	lib.c	/^void *memcpy(void *dest, const void *src, u32 n)$/;"	f
memset	lib.c	/^void *memset(void *s, int c, u32 n)$/;"	f
min	include/rtc.h	/^    u32 min;    \/* Minutes (0-59) *\/$/;"	m	struct:__anon1
mon	include/rtc.h	/^    u32 mon;    \/* Month (0-11) *\/$/;"	m	struct:__anon1
mxcdelay	i2c.c	/^void mxcdelay(int val)$/;"	f
not_used	head.S	/^not_used:$/;"	l
objdump	Makefile	/^objdump		:= $(CROSS_COMPILE)objdump$/;"	m
prefetch_abort	head.S	/^prefetch_abort:$/;"	l
printf	include/lib.h	4;"	d
raise	raise.c	/^void raise(void)$/;"	f
read_data	i2c.c	/^int read_data(char *data, int len)$/;"	f
rebuild_vectors_table	mmu.c	/^void rebuild_vectors_table(void)$/;"	f
reset	head.S	/^reset:$/;"	l
resume_iic_scl	i2c.c	/^void resume_iic_scl(void)$/;"	f
rtc_gettime	rtc.c	/^void rtc_gettime(rtctime_t *t)$/;"	f
rtc_set_alarm	rtc.c	/^void rtc_set_alarm(rtctime_t *t)$/;"	f
rtc_settime	rtc.c	/^void rtc_settime(rtctime_t *t)$/;"	f
rtc_tic_irq_init	rtc.c	/^void rtc_tic_irq_init(void)$/;"	f
rtctime_t	include/rtc.h	/^}rtctime_t;$/;"	t	typeref:struct:__anon1
sec	include/rtc.h	/^    u32 sec;    \/* Seconds (0-60) *\/$/;"	m	struct:__anon1
section_map	mmu.c	/^void section_map(u32 *ttb, u32 va_start, u32 va_end, u32 pa)$/;"	f
software_interrupt	head.S	/^software_interrupt:$/;"	l
start_convert	include/adc.h	19;"	d
start_pwm0_out	timer0.c	/^void start_pwm0_out(void)$/;"	f
stop_pwm0_out	timer0.c	/^void stop_pwm0_out(void)$/;"	f
strcmp	lib.c	/^int strcmp(const char *s1, const char *s2)$/;"	f
timer0_init	timer0.c	/^void timer0_init(u32 periodus, u32 dutyus)$/;"	f
timer4_init	timer4.c	/^void timer4_init(u32 ms)$/;"	f
tp_int_init	tp.c	/^void tp_int_init(void)$/;"	f
u16	include/lib.h	/^typedef unsigned short u16;$/;"	t
u32	include/lib.h	/^typedef unsigned int u32;$/;"	t
u8	include/lib.h	/^typedef unsigned char u8;$/;"	t
undefined_instruction	head.S	/^undefined_instruction:$/;"	l
va_arg	include/stdarg.h	49;"	d
va_copy	include/stdarg.h	51;"	d
va_end	include/stdarg.h	48;"	d
va_list	include/stdarg.h	/^typedef __gnuc_va_list va_list;$/;"	t
va_start	include/stdarg.h	47;"	d
wait_convert_end	include/adc.h	18;"	d
wait_until_iic_irq	i2c.c	/^int wait_until_iic_irq(void)$/;"	f
wday	include/rtc.h	/^    u32 wday;   \/* Day of the week (0-6, Sunday = 0) *\/$/;"	m	struct:__anon1
wdt_reset_init	wdt.c	/^void wdt_reset_init(u32 ms)$/;"	f
wdt_timer_init	wdt.c	/^void wdt_timer_init(u32 ms)$/;"	f
win0_init	lcd.c	/^static void win0_init(void)$/;"	f	file:
year	include/rtc.h	/^    u32 year;   \/* Year - 1900 *\/$/;"	m	struct:__anon1
